package kselection;

public class KSelection {
	int currentPos = 0;
	int pos = 0;
	Value[] sortedArray;
	
	public int kselect(int k, int[] values) 
	{
		sortedArray = new Value[values.length];
		Value temp;
		
		int posOfSmallest;
		
		//Checks if k is 0 or if the absolute value of k is smaller than the length of k
		if(k != 0 || Math.abs(k) <= values.length )
		{
			sortedArray[pos] = new Value(values[currentPos], 
									     values[currentPos+1], 
									     currentPos);
			
			if(sortedArray.length > 1)
			{
				for(int x = 0; x < sortedArray.length; x++)
				{
					for(int y = 0; y < sortedArray.length; y++)
					{
						if(sortedArray[x].getA() < sortedArray[y].getA())
						{
							temp = sortedArray[y];
							sortedArray[y] = sortedArray[x];
							sortedArray[x] = temp;
						}
						else if(sortedArray[x].getA() == sortedArray[y].getA()
									&& sortedArray[x].getB() < sortedArray[y].getB())
						{
							temp = sortedArray[y];
							sortedArray[y] = sortedArray[x];
							sortedArray[x] = temp;
						}
					}
				}
			}
		}
		else
		{
			return 0;
		}
	}
}

class Value{
	int a;
	int b;
	int pos;
	
	public Value(int a, int b, int pos)
	{
		this.a = a;
		this.b = b;
		this.pos = pos;
	}
	
	public int getA()
	{
		return a;
	}
	
	public int getB()
	{
		return b;
	}
	
	public int getPos()
	{
		return pos;
	}
}
